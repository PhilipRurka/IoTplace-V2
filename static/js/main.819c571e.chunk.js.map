{"version":3,"sources":["components/PasswordRequirements.jsx","themes/colors.js","helpers/breakpoints.js","helpers/conditions.js","components/BubbleCard.jsx","redux/constants.js","components/buttons/BasicButton.jsx","components/Form.jsx","components/buttons/IconButton.jsx","redux/actions.js","components/Display.jsx","components/App.jsx","serviceWorker.js","redux/reducers.js","redux/middleware.js","redux/stores.js","index.js"],"names":["colorTheme","colors","cloud","progression","progressionHover","warning","warningHover","error","errorHover","primaryBorder","primaryShadow","primaryBackground","secondaryBackground","thirdaryBackground","primaryCopy","secondaryCopy","nightVision","breaks","emailTest","email","test","nameLengthTest","name","length","passwordLengthTest","password","passwordUpperTest","passwordLowerTest","passwordSpecialTest","passwordNumberTest","match","lgBreak","largeBreakpoint","Wrapper","showingRequirements","heightCondition1","height","heightCondition2","position","overflow","transition","Container","top","left","width","border","borderRadius","Content","Label","Ul","Li","listStyleType","paddingLeft","lineHeight","content","backgroundColor","success","Span","PasswordRequirements","state","ColorTheme","theme","successRequirements","minCharacter","upperCase","lowerCase","special","number","display","padding","boxShadow","H1","color","margin","BubbleCard","label","children","className","ADD_ENTRY","ADD_ENTRY_MIDDLE","FAILED_ENTRY","INIT_ENTRIES","REMOVE_ENTRY","REMOVE_ALL_ENTRIES","TOGGLE_THEME","BasicButtonStyled","fontColor","bgColor","hoverColor","fontSize","size","addedStyles","borderWidth","borderStyle","letterSpacing","fontWeight","borderColor","BasicButton","type","handleClick","onClick","Form","props","firstNameInput","React","createRef","lastNameInput","emailInput","passwordInput","FormWrapper","Input","errorStyles","outlineColor","Field","verticalAlign","marginTop","TopChild","flexBasis","Half","submitButton","ShowRequirements","float","cursor","textDecoration","userSelect","handleSubmit","event","preventDefault","firstName","current","value","lastName","id","uuid","addEntry","handleShowRequirement","setState","passwordOnChange","this","focus","LocalStorageEntries","localStorage","getItem","JSON","parse","entries","initEntries","errorFields","undefined","failedForm","onSubmit","ref","onChange","Component","connectedForm","connect","dispatch","entry","payload","IconButtonStyled","buttonIcon","icon","backgroundSize","backgroundRepeat","backgroundImage","IconButton","copyColor","HR","whiteSpace","textOverflow","removeAllButton","marginBottom","removeEntries","right","EmptyEntries","Fields","connectedDisplay","removeEntry","removeAllEntries","onRemoveAll","map","i","key","onRemoveEntry","GlobalWrapper","minHeight","WarningText","CurrentTheme","textAlign","toggleTheme","formatedTheme","replace","charAt","toUpperCase","slice","onClickChangeTheme","Boolean","window","location","hostname","initialState","rootReducer","action","concat","setItem","stringify","Object","assign","index","splice","newTheme","errorRequirements","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","keys","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.819c571e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport ColorTheme from '../themes/colors';\nimport { breaks } from '../helpers/breakpoints';\nimport PropTypes from 'prop-types';\nimport {\n  passwordLengthTest,\n  passwordUpperTest,\n  passwordLowerTest,\n  passwordSpecialTest,\n  passwordNumberTest\n} from '../helpers/conditions';\n\n/** Colors of the current theme. */\nlet colorTheme;\n\n/** Styled Styled Styled Styled Styled Styled Styled Styled */\n\n/** Deconstructing */\nconst { lgBreak, mdBreak } = breaks;\n\n/** Set height depending on break point */\nconst smallHeight = '179px';\n/** Set height depending on break point */\nconst mediumHeight = '203px';\n/** Set height depending on break point */\nconst largeHeight = '223px';\n\n/** Break Points */\nconst largeBreakpoint = `@media (min-width: ${mdBreak}) and (max-width: calc(${lgBreak} - 1px))`;\n/** Break Points */\nconst smallBreakpoint = `@media (max-width: 430px)`;\n/** Break Points */\nconst xxsBreakPoint = `@media (max-width: 331px)`;\n\n/** Param => showingRequirements: - (Boolean) - Is the PasswordRequirements component showing? */\nconst Wrapper = styled.div(({ showingRequirements }) => {\n  /** Height for a specific break point. This is required for the transition effect. */\n  const heightCondition1 = {\n    height: (showingRequirements) ? mediumHeight : '0'\n  };\n\n  /** Height for a specific break point. This is required for the transition effect. */\n  const heightCondition2 = {\n    height: (showingRequirements) ? largeHeight : '0'\n  }\n  \n  return {\n    position: 'relative',\n    overflow: 'hidden',\n    transition: 'height 0.5s ease',\n    height: (showingRequirements) ? smallHeight : '0',\n\n    /** Break Points */\n    [largeBreakpoint]: { ...heightCondition1 },\n    [smallBreakpoint]: { ...heightCondition1 },\n    [xxsBreakPoint]: { ...heightCondition2 },\n  };\n});\n\nconst Container = styled.div(() => {\n  /** Height for a specific break point. */\n  const heightCondition1 = {\n    height: `calc(${mediumHeight} - 20px)`\n  };\n\n/** Height for a specific break point. */\n  const heightCondition2 = {\n    height: `calc(${largeHeight} - 20px)`\n  };\n\n  return {\n    position: 'absolute',\n    top: '10px',\n    left: '0',\n    height: `calc(${smallHeight} - 20px)`,\n    width: '100%',\n    border: `1px solid ${colorTheme.primaryBorder}`,\n    borderRadius: '10px',\n\n    /** Break Points */\n    [largeBreakpoint]: { ...heightCondition1 },\n    [smallBreakpoint]: { ...heightCondition1 },\n    [xxsBreakPoint]: { ...heightCondition2 },\n  };\n});\n\nconst Content = styled.div({\n  height: '100%',\n  padding: '11px 15px'\n});\n\nconst Label = styled.label({\n  marginBottom: '5px',\n});\n\nconst Ul = styled.ul({\n  margin: '0'\n});\n\n/** Param => success: - (Boolean) - Has the specific requirement been met? */\nconst Li = styled.li(({ success }) => ({\n  position: 'relative',\n  listStyleType: 'none',\n  paddingLeft: '20px',\n  lineHeight: '1.3em',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    top: '6px',\n    left: '0',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n    backgroundColor: (success)\n      ? colorTheme.primaryBorder : colorTheme.error\n  }\n}));\n\nconst Span = styled.span({\n  fontSize: '14px',\n  letterSpacing: '0.5px'\n});\n/** End End End End End End End End End */\n\n/** Param => state: - (Object) - The state of the Form Component. */\nconst PasswordRequirements = ({ state }) => {\n  /** Deconstructing */\n  const { showingRequirements, password } = state;\n  colorTheme = ColorTheme[state.theme];\n  /** Object containing the list of requirements and whether they have succeeded or not. */\n  let successRequirements = {\n    minCharacter: passwordLengthTest(password),\n    upperCase: passwordUpperTest(password),\n    lowerCase: passwordLowerTest(password),\n    special: passwordSpecialTest(password),\n    number: passwordNumberTest(password)\n  };\n\n  /** Deconstructing */\n  const { minCharacter, upperCase, lowerCase, special, number } = successRequirements;\n\n  return (\n    <Wrapper showingRequirements={showingRequirements}>\n      <Container>\n        <Content>\n          <Label>The following must contain the following:</Label>\n          <Ul>\n            <Li success={minCharacter}>\n              <Span>atleast 8 characters</Span>\n            </Li>\n            <Li success={upperCase}>\n              <Span>atleast 1 uppercase</Span>\n            </Li>\n            <Li success={lowerCase}>\n              <Span>atleast 1 lowercase</Span>\n            </Li>\n            <Li success={number}>\n              <Span>atleast 1 number</Span>\n            </Li>\n            <Li success={special}>\n              <Span>atleast 1 special character</Span>\n            </Li>\n          </Ul>\n        </Content>\n      </Container>\n    </Wrapper>\n  );\n};\n\nPasswordRequirements.propTypes = {\n  state: PropTypes.object.isRequired\n};\n\nexport default PasswordRequirements;","const colors = {\n  white:                            '#ffffff',\n  grayApprox:                       '#818181',\n  mintCream:                        '#f5fffa',\n  babyBlue:                         '#e1fffe',\n  anakiwa:                          '#9ffffc',\n  peppermint:                       '#DEF5DE',\n  chinook:                          '#A9E5BB',\n  malachite:                        '#1cc950',\n  mountainMeadow:                   '#1AB749',\n  emerald:                          '#4CCD4B',\n  apple:                            '#46BB45',\n  flushMahogany:                    '#C93238',\n  punch:                            '#DD373D',\n  mangoTango:                       '#DC8201',\n  tangerine:                        '#F18F01',\n  stTropaz:                         '#235789',\n  mirage:                           '#161925',\n  black:                            '#000000'\n};\n\nconst colorTheme = {\n  cloud: {\n    progression:                    colors.malachite,\n    progressionHover:               colors.mountainMeadow,\n    warning:                        colors.tangerine,\n    warningHover:                   colors.mangoTango,\n    error:                          colors.punch,\n    errorHover:                     colors.flushMahogany,\n    primaryBorder:                  colors.chinook,\n    primaryShadow:                  colors.anakiwa,\n    primaryBackground:              colors.mintCream,\n    secondaryBackground:            colors.white,\n    thirdaryBackground:             colors.babyBlue,\n    primaryCopy:                    colors.black,\n    secondaryCopy:                  colors.grayApprox\n  },\n  nightVision: {\n    progression:                    colors.emerald,\n    progressionHover:               colors.apple,\n    warning:                        colors.tangerine,\n    warningHover:                   colors.mangoTango,\n    error:                          colors.punch,\n    errorHover:                     colors.flushMahogany,\n    primaryBorder:                  colors.emerald,\n    primaryShadow:                  colors.emerald,\n    primaryBackground:              colors.mirage,\n    secondaryBackground:            colors.peppermint,\n    thirdaryBackground:             colors.white,\n    primaryCopy:                    colors.stTropaz,\n    secondaryCopy:                  colors.grayApprox\n  }\n};\n\nexport default colorTheme;","export const breaks = {\n  xlBreak:        '1200px',\n  lgBreak:        '992px',\n  mdBreak:        '768px',\n  smBreak:        '576px',\n  xsBreak:        '450px'\n};\n\nexport const breakPoints = {\n  breakPointXL:   ` @media (min-width: ${breaks.xlBreak})`,\n  breakPointLG:   ` @media (min-width: ${breaks.lgBreak})`,\n  breakPointMD:   ` @media (min-width: ${breaks.mdBreak})`,\n  breakPointSM:   ` @media (min-width: ${breaks.smBreak})`,\n  breakPointxs:   ` @media (min-width: ${breaks.xsBreak})`,\n  breakPointXXS:  ` @media (max-width: calc(${breaks.xsBreak} - 1px))`\n};","/** Test for valid email format. */\nexport const emailTest = (email) => {\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regex.test(email);\n};\n\n/** Test for name length. */\nexport const nameLengthTest = (name) => (\n  name.length < 2\n);\n\n/** Test for password length. */\nexport const passwordLengthTest = (password) => (\n  password.length >= 8\n);\n\n/** Test for a uppercase in password */\nexport const passwordUpperTest = (password) => {\n  const regex = /^(?=.*[A-Z]).+$/;\n  return regex.test(password);\n};\n\n/** Test for a lowercase in password */\nexport const passwordLowerTest = (password) => {\n  const regex = /^(?=.*[a-z]).+$/;\n  return regex.test(password);\n};\n\n/** Test for a special character in password */\nexport const passwordSpecialTest = (password) => {\n  const regex = /[-#?!@$%^&*-]/;\n  return regex.test(password);\n};\n\n/** Test for a number in password */\nexport const passwordNumberTest = (password) => (\n  password.match(/\\d+/g) && password.match(/\\d+/g).length > 0\n);","import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport ColorTheme from '../themes/colors';\n  let colorTheme;\n\n/** Styled Styled Styled Styled Styled Styled Styled Styled */\nconst Wrapper = styled.div({\n  display: 'inline-block',\n  verticalAlign: 'top',\n  marginTop: '15px',\n  padding: '15px'\n});\n\nconst Container = styled.div(() => ({\n  position: 'relative',\n  display: 'inline-block',\n  width: '100%',\n  border: `2px solid ${colorTheme.primaryBorder}`,\n  borderRadius: '10px',\n  padding: '15px 20px',\n  backgroundColor: colorTheme.secondaryBackground,\n  boxShadow: `0 0 13px ${colorTheme.primaryShadow}`\n}));\n\nconst H1 = styled.h1(() => ({\n  color: colorTheme.primaryCopy,\n  margin: '0',\n}));\n\nconst Content = styled.div({\n  margin: '15px 0'\n});\n/** End End End End End End End End End */\n\n\nconst BubbleCard = ({ label, children, theme }) => {\n  colorTheme = ColorTheme[theme];\n\n  return (\n    <Wrapper className='col-md-6'>\n      <Container>\n        <H1>{label}</H1>\n        <Content>\n          {children}\n        </Content>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default BubbleCard;\n","export const ADD_ENTRY = 'ADD_ENTRY';\nexport const ADD_ENTRY_MIDDLE = 'ADD_ENTRY_MIDDLE';\nexport const FAILED_ENTRY = 'FAILED_ENTRY';\nexport const INIT_ENTRIES = 'INIT_ENTRIES';\nexport const REMOVE_ENTRY = 'REMOVE_ENTRY';\nexport const REMOVE_ALL_ENTRIES = 'REMOVE_ALL_ENTRIES';\nexport const TOGGLE_THEME = 'TOGGLE_THEME';","import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport ColorTheme from '../../themes/colors';\nimport PropTypes from 'prop-types';\n\nlet colorTheme;\n\nconst BasicButtonStyled = styled.button(({ color, size, addedStyles }) => {\n  let fontColor, bgColor, hoverColor, padding, fontSize;\n\n  // Turn this into a helper.\n  if(color === 'green') {\n    fontColor = 'white';\n    bgColor = colorTheme.progression;\n    hoverColor = colorTheme.progressionHover;\n  } else if(color === 'orange') {\n    fontColor = 'white';\n    bgColor = colorTheme.warning;\n    hoverColor = colorTheme.warningHover;\n  } else if(color === 'red') {\n    fontColor = 'white';\n    bgColor = colorTheme.error;\n    hoverColor = colorTheme.errorHover;\n  };\n\n  if(size === 'lg') {\n    padding = '10px 20px';\n    fontSize = '16px';\n  } else if(size === 'sm') {\n    padding = '5px 15px';\n    fontSize = '13px';\n  };\n\n  const setStyles = {\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderRadius: '10px',\n    letterSpacing: '0.5px',\n    fontWeight: '600',\n    padding: padding,\n    fontSize: fontSize,\n    color: fontColor,\n    borderColor: bgColor,\n    backgroundColor: bgColor,\n    '&:hover': {\n      backgroundColor: hoverColor,\n      borderColor: hoverColor\n    }\n  }\n\n  return {...setStyles, ...addedStyles};\n});\n\n\nconst BasicButton = ({\n  theme,\n  type,\n  color,\n  size,\n  children,\n  addedStyles = null,\n  handleClick = null\n}) => {\n\ncolorTheme = ColorTheme[theme];\n\n  return (\n    <BasicButtonStyled\n      type={type}\n      color={color}\n      size={size}\n      addedStyles={addedStyles}\n      onClick={handleClick}\n      >{children}</BasicButtonStyled>\n  );\n};\n\nBasicButton.propTypes = {\n  theme:          PropTypes.string.isRequired,\n  type:           PropTypes.string.isRequired,\n  color:          PropTypes.string.isRequired,\n  size:           PropTypes.string.isRequired,\n  children:       PropTypes.string.isRequired,\n  addedStyles:    PropTypes.object,\n  onClick:        PropTypes.func,\n};\n\n\nexport default BasicButton;","import React from 'react';\nimport PasswordRequirements from './PasswordRequirements';\nimport BubbleCard from './BubbleCard';\nimport styled from '@emotion/styled/macro';\nimport { connect } from 'react-redux';\nimport { addEntry, initEntries } from '../redux/actions';\nimport uuid from 'uuid';\nimport BasicButton from './buttons/BasicButton';\nimport ColorTheme from '../themes/colors';\n\nconst mapToStateToProps = (state) => ({\n  errorFields: state.errorFields,\n  theme: state.theme\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addEntry: (entry) => dispatch(addEntry(entry)),\n    initEntries: (entries) => dispatch(initEntries(entries))\n  };\n};\n\nlet colorTheme;\n\nclass Form extends React.Component {\n  state = {\n    theme: this.props.theme,\n    showingRequirements: false,\n    password: ''\n  };\n\n  /** Ref Ref Ref Ref Ref Ref Ref */\n  firstNameInput = React.createRef();\n  lastNameInput = React.createRef();\n  emailInput = React.createRef();\n  passwordInput = React.createRef();\n  /** End End End End End End End */\n\n  /** Styled Styled Styled Styled Styled Styled Styled Styled */\n  FormWrapper = styled.form({\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  });\n  \n  Label = styled.label(() => ({\n      color: colorTheme.primaryCopy,\n      margin: '0',\n      fontWeight: '600',\n      letterSpacing: '0.5px',\n      display: 'inline-block'\n  }));\n  \n  Input = styled.input(({ error }) => {\n\n    const errorStyles = (error) ? {\n      borderColor: colorTheme.error,\n      '&:focus': { outlineColor: colorTheme.error }\n    } : null;\n\n    return {\n      color: colorTheme.primaryCopy,\n      display: 'block',\n      backgroundColor: colorTheme.thirdaryBackground,\n      border: `1px solid ${colorTheme.primaryBorder}`,\n      borderRadius: '5px',\n      padding: '10px',\n      width: '100%',\n      ...errorStyles\n    }\n  });\n  \n  Field = styled.div(({ TopChild, Half }) => ({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    marginTop: (TopChild) ? '0' : '20px',\n    flexBasis: (Half) ? 'calc(50% - 10px)' : '100%'\n  }));\n\n  submitButton = {\n    marginTop: '30px'\n  };\n\n  ShowRequirements = styled.p(() => ({\n    color: colorTheme.primaryCopy,\n    margin: '0',\n    float: 'right',\n    fontSize: '12px',\n    fontWeight: '600',\n    letterSpacing: '0.5px',\n    marginTop: '6px',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n    userSelect: 'none',\n    display: 'inline-block'\n  }));\n  /** End End End End End End End End End */\n\n  componentDidMount() {\n    this.firstNameInput.current.focus();\n    let LocalStorageEntries = localStorage.getItem('entries');\n    LocalStorageEntries = JSON.parse(LocalStorageEntries);\n    if(LocalStorageEntries && LocalStorageEntries.entries.length !== 0) {\n      this.props.initEntries(LocalStorageEntries.entries)\n    };\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let firstName = this.firstNameInput.current.value;\n    let lastName = this.lastNameInput.current.value;\n    let email = this.emailInput.current.value;\n    let password = this.passwordInput.current.value;\n\n    const id = uuid();\n    this.props.addEntry({\n      id,\n      firstName,\n      lastName,\n      email,\n      password\n    });\n  };\n\n  handleShowRequirement = () => {\n    let { showingRequirements } = this.state;\n    showingRequirements = !showingRequirements;\n    this.setState({ showingRequirements });\n  };\n\n  passwordOnChange = () => {\n    this.setState({ password: this.passwordInput.current.value })\n  };\n\n  render() {\n    const {\n      state,\n      FormWrapper,\n      Label,\n      Input,\n      Field,\n      ShowRequirements,\n      passwordOnChange\n    } = this;\n\n    colorTheme = ColorTheme[state.theme];\n\n    const { showingRequirements } = this.state;\n    const { errorFields, theme } = this.props;\n\n    if(errorFields.failedForm !== undefined && !errorFields.failedForm) {\n      this.firstNameInput.current.value = '';\n      this.lastNameInput.current.value = '';\n      this.emailInput.current.value = '';\n      this.passwordInput.current.value = '';\n      this.firstNameInput.current.focus();\n      errorFields.failedForm = undefined;\n    };\n\n    return (\n      <BubbleCard label='Form Section' theme={theme}>\n        <FormWrapper onSubmit={this.handleSubmit}>\n          <Field TopChild Half>\n            <Label>First Name</Label>\n            <Input\n              type='text'\n              ref={this.firstNameInput}\n              error={errorFields.firstName}\n            />\n          </Field>\n          <Field TopChild Half>\n            <Label>Last Name</Label>\n            <Input\n              type='text'\n              ref={this.lastNameInput}\n              error={errorFields.lastName}\n            />\n          </Field>\n          <Field>\n            <Label>Email Adress</Label>\n            <Input\n              type='email'\n              ref={this.emailInput}\n              error={errorFields.email}\n            />\n          </Field>\n          <Field>\n            <Label>Password</Label>\n            <ShowRequirements onClick={this.handleShowRequirement}>\n              {(showingRequirements) ? 'Hide Requirements' : 'Show Requirements'}\n            </ShowRequirements>\n            <PasswordRequirements state={state} />\n            <Input\n              type='password'\n              ref={this.passwordInput}\n              error={errorFields.password}\n              onChange={passwordOnChange}\n            />\n          </Field>\n          <BasicButton\n            type='submit'\n            color='green'\n            size='lg'\n            addedStyles={this.submitButton}\n            theme={theme}\n            >Submit\n          </BasicButton>\n        </FormWrapper>\n      </BubbleCard>\n    );\n  };\n};\n\nconst connectedForm = connect(mapToStateToProps, mapDispatchToProps) (Form);\n\nexport default connectedForm;","import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport ColorTheme from '../../themes/colors';\nimport PropTypes from 'prop-types';\n\nlet colorTheme;\n\nexport const IconButtonStyled = styled.button(({ color, size, addedStyles, icon, theme}) => {\n  let fontColor, bgColor, hoverColor, padding, borderWidth, buttonIcon;\n\n  if(color === 'green') {\n    fontColor = 'white';\n    bgColor = colorTheme.progression;\n    hoverColor = colorTheme.progressionHover;\n  } else if(color === 'orange') {\n    fontColor = 'white';\n    bgColor = colorTheme.warning;\n    hoverColor = colorTheme.warningHover;\n  } else if(color === 'red') {\n    fontColor = 'white';\n    bgColor = colorTheme.error;\n    hoverColor = colorTheme.errorHover;\n  };\n\n  if(size === 'lg') {\n    padding = '10px';\n    borderWidth = '8px';\n  } else if(size === 'sm') {\n    padding = '5px';\n    borderWidth = '4px';\n  };\n\n  if(icon === 'minus') {\n    buttonIcon = 'url(\"./images/minus.svg\")';\n  };\n\n  const setStyles = {\n    borderStyle: 'solid',\n    borderRadius: '50%',\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    padding: padding,\n    borderWidth: borderWidth,\n    color: fontColor,\n    borderColor: bgColor,\n    backgroundColor: bgColor,\n    '&:hover': {\n      backgroundColor: hoverColor,\n      borderColor: hoverColor\n    },\n    backgroundImage: buttonIcon\n  }\n\n  return {...setStyles, ...addedStyles};\n});\n\n\nconst IconButton = ({\n  type,\n  color,\n  size,\n  addedStyles = null,\n  handleClick = null,\n  icon,\n  theme\n}) => {\n\n  colorTheme = ColorTheme[theme];\n\n  return (\n    <IconButtonStyled\n      type={type}\n      color={color}\n      size={size}\n      addedStyles={addedStyles}\n      onClick={handleClick}\n      icon={icon}\n      theme={theme}\n    />\n  );\n};\n\nIconButton.propTypes = {\n  theme:          PropTypes.string.isRequired,\n  type:           PropTypes.string.isRequired,\n  color:          PropTypes.string.isRequired,\n  size:           PropTypes.string.isRequired,\n  icon:           PropTypes.string.isRequired,\n  addedStyles:    PropTypes.object,\n  onClick:        PropTypes.func\n};\n\nexport default IconButton;","import {\n  ADD_ENTRY_MIDDLE,\n  INIT_ENTRIES,\n  REMOVE_ENTRY,\n  REMOVE_ALL_ENTRIES,\n  TOGGLE_THEME\n} from './constants';\n\nexport function addEntry(payload) {\n  return { type: ADD_ENTRY_MIDDLE, payload };\n};\n\nexport function initEntries(payload) {\n  return { type: INIT_ENTRIES, payload };\n};\n\nexport function removeEntry(payload) {\n  return { type: REMOVE_ENTRY, payload };\n};\n\nexport function removeAllEntries() {\n  return { type: REMOVE_ALL_ENTRIES};\n};\n\nexport function toggleTheme() {\n  return { type: TOGGLE_THEME};\n};\n","import React from 'react';\nimport BubbleCard from './BubbleCard';\nimport { connect } from 'react-redux';\nimport styled from '@emotion/styled/macro';\nimport { removeEntry, removeAllEntries } from '../redux/actions';\nimport BasicButton from './buttons/BasicButton';\nimport IconButton from './buttons/IconButton';\nimport ColorTheme from '../themes/colors';\n  let colorTheme;\n\nconst mapToStateToProps = (state) => ({\n  entries: state.entries,\n  theme: state.theme\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeEntry: (id) => dispatch(removeEntry(id)),\n    removeAllEntries: () => dispatch(removeAllEntries()),\n  };\n};\n\nlet copyColor;\n/** Styled Styled Styled Styled Styled Styled Styled Styled */\n\nconst fontSize = {\n  fontSize: '14px',\n  display: 'inline-block',\n  verticalAlign: 'top'\n}\n\nconst HR = styled.hr({});\n\nconst Field = styled.div({});\n\nconst Label = styled.label(() => ({\n  fontWeight: '600',\n  width: '85px',\n  margin: '0',\n  ...fontSize,\n  ...copyColor\n}));\n\nconst Span = styled.span(() => ({\n  display: 'inline-block',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  width: 'calc(100% - 110px)',\n  overflow: 'hidden',\n  ...fontSize,\n  ...copyColor\n  }));\n\nconst removeAllButton = {\n  marginBottom: '20px'\n};\n\nconst removeEntries = {\n  position: 'absolute',\n  top: '0',\n  right: '0'\n};\n\nconst EmptyEntries = styled.p(() => ({\n    color: colorTheme.secondaryCopy\n}));\n\nconst Fields = styled.div({\n  position: 'relative'\n});\n/** End End End End End End End End End */\n\nconst onRemoveAll = (removeAllEntries) => {\n  removeAllEntries();\n};\n\nconst onRemoveEntry = (removeEntry, id) => {\n  removeEntry(id);\n};\n\nconst Display = ({ theme, entries, removeAllEntries, removeEntry }) => {\n  colorTheme = ColorTheme[theme];\n  copyColor = { color: colorTheme.primaryCopy };\n  return (\n    <BubbleCard className='col-6-md' label='Display Section' theme={theme}>\n      {(entries && entries.length !== 0)\n      ? (\n        <BasicButton\n          type='button'\n          color='orange'\n          size='sm'\n          addedStyles={removeAllButton}\n          handleClick={() => {onRemoveAll(removeAllEntries)}}\n          theme={theme}\n          >Remove All!\n        </BasicButton>\n      ) : (\n        <EmptyEntries theme={theme}>There are no current entries.<br />Fill out and submit the form.</EmptyEntries>\n      )}\n      {entries.map(({ id, firstName, lastName, email, password }, i) => (\n        <div key={id}>\n          {(i > 0) && <HR />}\n          <Fields>\n            <IconButton\n              type='button'\n              color='red'\n              size='sm'\n              icon='minus'\n              addedStyles={removeEntries}\n              handleClick={() => {onRemoveEntry(removeEntry, id)}}\n              theme={theme}\n              />\n            <Field>\n              <Label>UUID:</Label>\n              <Span>{id}</Span>\n            </Field>\n            <Field>\n              <Label>First Name:</Label>\n              <Span>{firstName}</Span>\n            </Field>\n            <Field>\n              <Label>Last Name:</Label>\n              <Span>{lastName}</Span>\n            </Field>\n            <Field>\n              <Label>Email:</Label>\n              <Span>{email}</Span>\n            </Field>\n            <Field>\n              <Label>Password:</Label>\n              <Span>{password}</Span>\n            </Field>\n          </Fields>\n        </div>\n      ))}\n    </BubbleCard>\n  );\n};\n\nconst connectedDisplay = connect(mapToStateToProps, mapDispatchToProps) (Display)\n\nexport default connectedDisplay;","import React from 'react';\nimport Form from './Form';\nimport Display from './Display';\nimport styled from '@emotion/styled/macro';\nimport { connect } from 'react-redux';\nimport ColorTheme from '../themes/colors';\nimport { toggleTheme } from '../redux/actions';\n\nlet colorTheme;  \nconst mapToStateToProps = (state) => ({ theme: state.theme });\nconst mapDispatchToProps = (dispatch) => ({ toggleTheme: () => dispatch(toggleTheme())});\n\nconst GlobalWrapper = styled.div(() => ({\n  height: '100%',\n  minHeight: '100vh',\n  backgroundColor: colorTheme.primaryBackground\n}));\n\nconst WarningText = styled.div({\n  textAlign: 'center',\n  marginTop: '30px',\n  display: 'inline-block',\n  width: '100%',\n\n  'p': {\n    display: 'inline-block',\n    margin: '0',\n    color: 'orange',\n    '& + p' : { textDecoration: 'underline' }\n  }\n});\n\nconst CurrentTheme = styled.div(() => ({\n  textAlign: 'center',\n\n  '& > *': {\n    color: `${colorTheme.progression}`,\n    '&:hover': {\n      color: `${colorTheme.progressionHover}`,\n    }\n  },\n\n  '& > p': {\n    display: 'block',\n    margin: '30px 0 0'\n  },\n\n  'span, span p': {\n    display: 'inline-block',\n  },\n\n  'span p': {\n    margin: '0',\n    textDecoration: 'underline',\n    cursor: 'pointer'\n  }\n}));\n\nconst onClickChangeTheme = (toggleTheme) => {\n  toggleTheme();\n};\n\nconst App = ({ theme, toggleTheme }) => {\n  colorTheme = ColorTheme[theme];\n\n  let formatedTheme = theme.replace(/([a-z])([A-Z])/g, '$1 $2');\n  formatedTheme = formatedTheme.charAt(0).toUpperCase() + formatedTheme.slice(1);\n\n  return (\n    <GlobalWrapper>\n      <div className=\"container\">\n        <WarningText>\n          <p>Warning, your password will be displayed in the Display Section.&nbsp;</p>\n          <p>Do not use any personal Passwords.</p>\n        </WarningText>\n        <CurrentTheme>\n          <p>You are currently in the <strong>{formatedTheme}</strong> theme.</p>\n          <span>Click&nbsp;\n            <p onClick={() => (onClickChangeTheme(toggleTheme))}>here</p>\n          </span>\n          <span>&nbsp;to switch theme.</span>\n        </CurrentTheme>\n        <Form />\n        <Display />\n      </div>\n    </GlobalWrapper>\n  );\n};\n\nconst connectedForm = connect(mapToStateToProps, mapDispatchToProps) (App);\n\nexport default connectedForm;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_ENTRY,\n  FAILED_ENTRY,\n  INIT_ENTRIES,\n  REMOVE_ENTRY,\n  REMOVE_ALL_ENTRIES,\n  TOGGLE_THEME\n} from './constants';\n\nconst initialState = {\n  entries: [],\n  theme: 'cloud',\n  errorFields: {}\n};\n\n// Look into moving some of this logic into the middleware.\nfunction rootReducer(state = initialState, action) {\n  const { type, payload } = action;\n  if(type === ADD_ENTRY) {\n    const entries = state.entries.concat(payload.entries);\n    localStorage.setItem('entries', JSON.stringify({ entries }));\n\n    return Object.assign({}, state, {\n      entries,\n      errorFields: { ...state.errorFields, ...payload.errorFields }\n    });\n\n  } else if(type === FAILED_ENTRY) {\n    return Object.assign({}, state, {\n      errorFields: {...payload.errorFields}\n    });\n\n  } else if(type === INIT_ENTRIES) {\n    return Object.assign({}, state, {\n      entries: state.entries.concat(payload)\n    });\n\n  } else if(type === REMOVE_ENTRY) {\n\n    const entries = [...state.entries];\n\n    let index;\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n      if(payload === entry.id) {\n        index = i;\n        break;\n      };\n    };\n\n    entries.splice(index, 1);\n    localStorage.setItem('entries', JSON.stringify({ entries }));\n\n    return Object.assign({}, state, {\n      entries: entries\n    });\n\n  } else if(type === REMOVE_ALL_ENTRIES) {\n    const entries = [];\n    localStorage.setItem('entries', JSON.stringify(entries));\n\n    return Object.assign({}, state, { entries });\n\n  } else if(type === TOGGLE_THEME) {\n    const newTheme = (state.theme === 'cloud')\n      ? 'nightVision' : 'cloud';\n\n    return Object.assign({}, state, {\n      theme: newTheme\n    });\n  };\n\n  return state;\n};\n\nexport default rootReducer;","import {\n  ADD_ENTRY,\n  FAILED_ENTRY,\n  ADD_ENTRY_MIDDLE\n} from './constants';\nimport {\n  nameLengthTest,\n  emailTest,\n  passwordLengthTest,\n  passwordUpperTest,\n  passwordLowerTest,\n  passwordSpecialTest,\n  passwordNumberTest\n} from '../helpers/conditions';\n\nconst errorRequirements = {\n  firstName: true,\n  lastName: true,\n  email: true,\n  password: true,\n  failedForm: false\n};\n\nexport function formValidation({ dispatch }) {\n  return function(next) {\n    return function(action) {\n      if(action.type === ADD_ENTRY_MIDDLE) {\n        const { firstName, lastName, email, password} = action.payload;\n\n        /** Names Names Names Names Names Names */\n        errorRequirements.firstName = nameLengthTest(firstName);\n        errorRequirements.lastName = nameLengthTest(lastName);\n        /** End End End End End End */\n\n        /** Email Email Email Email Email Email */\n        errorRequirements.email = emailTest(email)\n          ? false : true;\n        /** End End End End End End */\n\n        /** Password Password Password Password Password Password */\n        errorRequirements.password = (\n          passwordLengthTest(password)\n          && passwordUpperTest(password)\n          && passwordLowerTest(password)\n          && passwordSpecialTest(password)\n          && passwordNumberTest(password)\n        ) ? false : true\n        /** End End End End End End */\n\n        errorRequirements.failedForm = false;\n        Object.keys(errorRequirements).map((key) => {\n          if(errorRequirements[key]) { errorRequirements.failedForm = true };\n        });\n\n        if(errorRequirements.failedForm) {\n          return dispatch({\n            type: FAILED_ENTRY,\n            payload: {\n              entries: action.payload,\n              errorFields: errorRequirements\n            }\n          });\n        } else {\n          return dispatch({\n            type: ADD_ENTRY,\n            payload: {\n              entries: action.payload,\n              errorFields: errorRequirements\n            }\n          });\n        };\n      };\n      return next(action);\n    };\n  };\n};\n\n\n\n// errorRequirements.character = (password.length < 8);\n// errorRequirements.upperCase = (/^(?=.*[A-Z]).+$/.test(password))\n//   ? false : true;\n// errorRequirements.lowerCase = (/^(?=.*[a-z]).+$/.test(password))\n//   ? false : true;\n// errorRequirements.special = (/[-#?!@$%^&*-]/.test(password))\n//   ? false : true;\n// errorRequirements.number = (password.match(/\\d+/g) && password.match(/\\d+/g).length > 0)\n//   ? false : true;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { formValidation } from './middleware';\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(formValidation, thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/normalizer.scss';\nimport './styles/main.scss';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/stores';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}